{"version":3,"sources":["reducers/brandReducer.js","reducers/index.js","components/Header.js","config/axiosConfig.js","config/imageConfig.js","components/brands/BrandList.js","actions/brandGlobal.js","history.js","components/App.js","index.js"],"names":["initialState","brands","search","brandReducer","state","action","type","Object","assign","payload","combineReducers","Header","className","to","require","config","axiosInstance","axios","create","baseURL","process","API_URL","BrandList","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","postion","result","coords","latitude","longitude","setState","searchLocation","componentDidMount","dispatch","a","get","response","data","then","res","rowData","Row","Col","sm","Card","CardBody","md","size","offset","style","paddingTop","InputGroup","Input","id","placeholder","this","InputGroupAddon","addonType","InputGroupText","map","item","index","lg","body","outline","borderColor","CardHeader","CardTitle","brandName","CardText","CardLink","href","locationLink","CardImg","variant","src","IMG","branchLogo","branchName","location","contact","React","Component","connect","createBrowserHistory","App","history","path","exact","component","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.11f1ba20.chunk.js","sourcesContent":["export const initialState = {\r\n    brands: [],\r\n    search: []\r\n}\r\n\r\nconst brandReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_BRAND\":\r\n            return Object.assign({}, state, { brands: action.payload })\r\n        case \"GET_SEARCH\":\r\n            return Object.assign({}, state, { search: action.payload })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default brandReducer","import { combineReducers } from 'redux'\r\nimport brandReducer from '../reducers/brandReducer'\r\n\r\nexport default combineReducers({\r\n    brandReducer: brandReducer\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/header.css'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <div className=\"content-container\">\r\n            <div className=\"header__content\">\r\n                <Link className=\"header__title\" to=\"/\">\r\n                    <h1>Automobile</h1>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nexport default Header","import axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:\r\n        process.env.API_URL || \"http://localhost:8000/api/\",\r\n});\r\n\r\nexport default axiosInstance;","require('dotenv').config()\r\n\r\nconst axiosInstance = {\r\n    baseURL: process.env.REACT_APP_PUBLIC_PATH || \"http://localhost:8000/upload/\"\r\n}\r\n\r\nexport default axiosInstance","import React from 'react'\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    CardTitle,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport * as globalActions from '../../actions/brandGlobal'\r\nimport IMG from '../../config/imageConfig'\r\nimport { MapPin } from 'react-feather'\r\n\r\nclass BrandList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            rowData: [],\r\n            searchLocation: []\r\n        }\r\n    }\r\n    getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                this.getCoordinates,\r\n                this.handleLocation\r\n            );\r\n        } else {\r\n            alert(\"hello\");\r\n        }\r\n    };\r\n    handleLocation = (error) => {\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                alert(\"The Request For Geolocation is denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                alert(\"Showroom Location is not available.\");\r\n                break;\r\n            case error.TIMEOUT:\r\n                alert(\"user location was timed out.\");\r\n                break;\r\n            case error.UNKNOWN_ERROR:\r\n                alert(\"Unknown error access\");\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n    getCoordinates = (postion) => {\r\n        const data = postion.coords.latitude\r\n        const xyz = postion.coords.longitude\r\n        const result = data + ' , ' + xyz\r\n        this.setState({ searchLocation: result })\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(globalActions.getBrand()).then((res) => {\r\n            let rowData = res.data;\r\n            this.setState({ rowData });\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card className=\"pt-1\">\r\n                        <CardBody>\r\n                            <Col sm=\"12\">\r\n                                <Col\r\n                                    sm=\"12\"\r\n                                    md={{ size: 4, offset: 4 }}\r\n                                    style={{ paddingTop: 20 }}\r\n                                >\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            id=\"brand\"\r\n                                            placeholder=\"Search showroom\"\r\n                                        />\r\n                                        <p>{this.state.searchLocation}</p>\r\n                                        <InputGroupAddon addonType=\"append\">\r\n                                            <InputGroupText>\r\n                                                Search\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Row className=\"pt-4\">\r\n                                    {this.state.rowData &&\r\n                                        this.state.rowData.map((item, index) => {\r\n                                            return (\r\n                                                <Col lg=\"4\" sm=\"12\" key={index}>\r\n                                                    <Card\r\n                                                        body\r\n                                                        outline\r\n                                                        style={{ borderColor: \"#333\" }}\r\n                                                        className=\"mt-4\"\r\n                                                    >\r\n                                                        <CardHeader className=\"justify-content-between\">\r\n                                                            <div className=\"card-heading\">\r\n                                                                <CardTitle>\r\n                                                                    <h6>\r\n                                                                        <strong>\r\n                                                                            {item.brandName}\r\n                                                                        </strong>\r\n                                                                    </h6>\r\n                                                                </CardTitle>\r\n                                                                <CardText>\r\n                                                                    <CardLink\r\n                                                                        href={item.locationLink}\r\n                                                                    >\r\n                                                                        <MapPin size=\"15\" />{\" \"}\r\n                                                                        &nbsp; Find Location\r\n                                                                    </CardLink>\r\n                                                                </CardText>\r\n                                                            </div>\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <CardImg\r\n                                                                variant=\"bottom\"\r\n                                                                src={\r\n                                                                    IMG.baseURL +\r\n                                                                    \"/\" +\r\n                                                                    item.branchLogo\r\n                                                                }\r\n                                                            />\r\n                                                            <hr />\r\n                                                            <div className=\"justify-content-between\">\r\n                                                                <i>Branch Name:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-success\">\r\n                                                                    {item.branchName}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Location:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-secondary\">\r\n                                                                    {item.location}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Contact:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-info\">\r\n                                                                    {item.contact}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            );\r\n                                        })}\r\n                                </Row>\r\n                            </Col>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(BrandList)","import axios from '../config/axiosConfig'\r\n\r\nexport const getBrand = () => async (dispatch) => {\r\n    const response = await axios.get('/brand')\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n\r\nexport const getSearch = () => async (dispatch) => {\r\n    const response = await axios.get('/search')\r\n    if (response) {\r\n        dispatch({ type: \"GET_SEARCH\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import React from 'react'\r\nimport { Router, Route } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport BrandList from './brands/BrandList'\r\nimport history from '../history'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header />\r\n                    <Route path=\"/\" exact component={BrandList} />\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}