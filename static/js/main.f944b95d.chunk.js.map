{"version":3,"sources":["reducers/brandReducer.js","reducers/index.js","components/Header.js","history.js","config/axiosConfig.js","config/imageConfig.js","components/brands/BrandList.js","actions/brandGlobal.js","components/package/PackageList.js","components/App.js","index.js"],"names":["initialState","brands","brandReducer","state","action","type","Object","assign","payload","combineReducers","Header","className","to","history","createHashHistory","require","config","axiosInstance","axios","create","baseURL","process","API_URL","BrandList","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","position","lng","lat","coords","latitude","longitude","dispatch","a","get","response","then","res","data","setState","onSearchChange","abc","search","rowData","brandData","componentDidMount","brand","searchData","Row","Col","sm","Card","CardBody","md","size","offset","style","paddingTop","InputGroup","Input","id","placeholder","onChange","e","target","value","this","searchLocation","InputGroupAddon","addonType","InputGroupText","length","map","item","index","lg","body","outline","borderColor","onClick","push","CardHeader","CardTitle","brandName","CardText","CardLink","href","locationLink","CardImg","variant","src","IMG","branchLogo","branchName","location","contact","React","Component","connect","PackageList","product","filter","brandId","console","log","App","path","exact","component","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f944b95d.chunk.js","sourcesContent":["export const initialState = {\r\n    brands: []\r\n}\r\n\r\nconst brandReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_BRAND\":\r\n            return Object.assign({}, state, { brands: action.payload })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default brandReducer","import { combineReducers } from 'redux'\r\nimport brandReducer from '../reducers/brandReducer'\r\n\r\nexport default combineReducers({\r\n    brandReducer: brandReducer\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/header.css'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <div className=\"content-container\">\r\n            <div className=\"header__content\">\r\n                <Link className=\"header__title\" to=\"/\">\r\n                    <h1>Automobile</h1>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nexport default Header","import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory()","import axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:\r\n        process.env.API_URL || \"http://localhost:8000/api/\",\r\n});\r\n\r\nexport default axiosInstance;","require('dotenv').config()\r\n\r\nconst axiosInstance = {\r\n    baseURL: process.env.REACT_APP_PUBLIC_PATH || \"http://localhost:8000/upload/\"\r\n}\r\n\r\nexport default axiosInstance","import React from 'react'\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    CardTitle,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { history } from '../../history'\r\nimport * as globalActions from '../../actions/brandGlobal'\r\nimport IMG from '../../config/imageConfig'\r\nimport { MapPin } from 'react-feather'\r\n\r\nclass BrandList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            rowData: [],\r\n            searchData: []\r\n        }\r\n    }\r\n    getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                this.getCoordinates,\r\n                this.handleLocation\r\n            );\r\n        } else {\r\n            alert(\"hello\");\r\n        }\r\n    };\r\n    handleLocation = (error) => {\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                alert(\"The Request For Geolocation is denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                alert(\"Showroom Location is not available.\");\r\n                break;\r\n            case error.TIMEOUT:\r\n                alert(\"user location was timed out.\");\r\n                break;\r\n            case error.UNKNOWN_ERROR:\r\n                alert(\"Unknown error access\");\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n    getCoordinates = (position) => {\r\n        const abc = position.coords.latitude\r\n        const xyz = position.coords.longitude\r\n        this.props.dispatch(globalActions.getLocationBrand(72.555338, 23.049929)).then((res) => {\r\n            let data = res.data\r\n            this.setState({ data })\r\n        })\r\n    };\r\n\r\n    onSearchChange = (abc) => {\r\n        this.props.dispatch(globalActions.getSearch(abc)).then((response) => {\r\n            let rowData = response.data.data.brandData;\r\n            this.setState({ rowData });\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(globalActions.getBrand()).then((res) => {\r\n            let rowData = res.data.data.brand;\r\n            this.setState({ rowData });\r\n        });\r\n        this.getLocation()\r\n    };\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card className=\"pt-1\">\r\n                        <CardBody>\r\n                            <Col sm=\"12\">\r\n                                <Col\r\n                                    sm=\"12\"\r\n                                    md={{ size: 4, offset: 4 }}\r\n                                    style={{ paddingTop: 20 }}\r\n                                >\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            id=\"brand\"\r\n                                            placeholder=\"Search showroom\"\r\n                                            onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                        />\r\n                                        <p>{this.state.searchLocation}</p>\r\n                                        <InputGroupAddon addonType=\"append\">\r\n                                            <InputGroupText>\r\n                                                Search\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Row className=\"pt-4\">\r\n                                    {this.state.rowData && this.state.rowData.length > 0\r\n                                        ? this.state.rowData.map((item, index) => {\r\n                                            return (\r\n                                                <Col lg=\"4\" sm=\"12\" key={index}>\r\n                                                    <Card\r\n                                                        body\r\n                                                        outline\r\n                                                        style={{ borderColor: \"#333\" }}\r\n                                                        className=\"mt-4\"\r\n                                                        onClick={() => history.push(\"/package\")}\r\n                                                    >\r\n                                                        <CardHeader className=\"justify-content-between\">\r\n                                                            <div className=\"card-heading\">\r\n                                                                <CardTitle>\r\n                                                                    <h6>\r\n                                                                        <strong>\r\n                                                                            {item.brandName}\r\n                                                                        </strong>\r\n                                                                    </h6>\r\n                                                                </CardTitle>\r\n                                                                <CardText>\r\n                                                                    <CardLink\r\n                                                                        href={item.locationLink}\r\n                                                                    >\r\n                                                                        <MapPin size=\"15\" />{\" \"}\r\n                                                                            &nbsp; Find Location\r\n                                                                        </CardLink>\r\n                                                                </CardText>\r\n                                                            </div>\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <CardImg\r\n                                                                variant=\"bottom\"\r\n                                                                src={\r\n                                                                    IMG.baseURL +\r\n                                                                    \"\" +\r\n                                                                    item.branchLogo\r\n                                                                }\r\n                                                            />\r\n                                                            <hr />\r\n                                                            <div className=\"justify-content-between\">\r\n                                                                <i>Branch Name:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-success\">\r\n                                                                    {item.branchName}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Location:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-secondary\">\r\n                                                                    {item.location}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Contact:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-info\">\r\n                                                                    {item.contact}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            );\r\n                                        }) :\r\n                                        \"No showroom near found you!\"}\r\n                                </Row>\r\n                            </Col>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(BrandList)","import axios from '../config/axiosConfig'\r\n\r\nexport const getBrand = () => async (dispatch) => {\r\n    const response = await axios.get('/brand')\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n\r\nexport const getSearch = (search) => async (dispatch) => {\r\n    const response = await axios.get(`/search/${search}`)\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n\r\nexport const getLocationBrand = (lng, lat) => async (dispatch) => {\r\n    const response = await axios.get(`/location?lng=${lng}&lat=${lat}`)\r\n    return response\r\n}\r\n\r\nexport const getProduct = () => async (dispatch) => {\r\n    const response = await axios.get('/product')\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}","import React from \"react\"\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    CardTitle,\r\n\r\n} from \"reactstrap\";\r\nimport { connect } from 'react-redux'\r\nimport * as globalActions from '../../actions/brandGlobal'\r\n\r\nclass PackageList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brandId:\r\n                this.props.location &&\r\n                    this.props.location.state &&\r\n                    this.props.location.state.brandId\r\n                    ? this.props.location.state.brandId // you will get the edit Id here\r\n                    : \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(globalActions.getProduct()).then((res) => {\r\n            let rowData = res.data.data.product.filter((item) => {\r\n                if (item.brandId === this.state.brandId) {\r\n                    console.log(\"hi\")\r\n                } else {\r\n                    console.log(\"sorry\")\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md=\"6\" sm=\"12\" className=\"pt-4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>welcome</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h1> hiii</h1>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <h2> hello</h2>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(PackageList)\r\n","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport BrandList from './brands/BrandList'\r\nimport PackageList from './package/PackageList'\r\nimport { history } from '../history'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router history={history}>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={BrandList} />\r\n                    <Route path=\"/package\" exact component={PackageList} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}