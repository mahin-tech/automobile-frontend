{"version":3,"sources":["reducers/brandReducer.js","reducers/index.js","components/Header.js","history.js","config/axiosConfig.js","actions/brandGlobal.js","config/imageConfig.js","components/brands/BrandList.js","components/ExtraItem.js","components/PlaceLogin.js","components/CartItem.js","navbar/menu.js","components/package/PackageList.js","components/Register.js","components/PlaceCart.js","components/Payment.js","components/Place.js","components/App.js","index.js"],"names":["initialState","brands","data","userInfo","accessToken","brandReducer","state","action","type","Object","assign","payload","filter","item","combineReducers","Header","className","to","history","createHashHistory","require","config","axiosInstance","axios","create","baseURL","process","API_URL","removeItem","dispatch","a","BrandList","props","getLocation","navigator","geolocation","getCurrentPosition","getCoordinates","handleLocation","alert","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","position","lng","lat","abc","coords","latitude","xyz","longitude","get","response","then","res","setState","onSearchChange","search","rowData","brandData","componentDidMount","brand","searchData","Row","Col","sm","Card","CardBody","md","size","offset","style","paddingTop","InputGroup","Input","id","placeholder","onChange","e","target","value","this","searchLocation","InputGroupAddon","addonType","InputGroupText","length","map","index","lg","body","outline","borderColor","onClick","push","pathname","brandId","_id","CardHeader","CardTitle","brandName","CardText","CardLink","href","locationLink","CardImg","variant","src","IMG","branchLogo","branchName","location","contact","React","Component","connect","ExtraItem","handleItem","extraPrice","price","total","addItem","name","itemName","handleClick","productName","quantity","handleChild","formData","addExtraItem","Table","responsive","bordered","borderless","Button","color","PlaceLogin","handleInput","event","persist","prevState","handleFormSubmit","user","post","email","password","token","setTimeout","console","log","catch","toggle","tab","activeTab","responseSuccessGoogle","obj","tokenId","logInGoogle","responseFacebook","userID","logInFacebook","xl","FormGroup","exact","Form","onSubmit","preventDefault","Label","clientId","buttonText","onSuccess","cookiePolicy","appId","callback","CartItem","handleInc","i","productId","put","data1","updateProduct","cart","splice","reduce","totalitem","handleDec","prevPrice","handleDel","window","reload","handleRemove","toggleModal","showModal","addItem1","updateData","total1","tag","Modal","isOpen","ModalHeader","ModalBody","Menu1","handleitem","path","logout","UncontrolledDropdown","DropdownToggle","data-toggle","DropdownMenu","right","DropdownItem","firstName","lastName","withRouter","PackageList","package","extraItemDetails","comboItem","globalActions","arr","count","cursor","packageName","productDetails","Media","description","object","image","alt","height","width","Register","pinCode","address","mobile","roles","erroMsg","justifyContent","alignItems","backgroundRepeat","backgroundSize","backgroundColor","required","block","PlaceCart","cartData","cartTotal","showLeadModal","Payment","userId","clientToken","onPurchase","instance","requestPaymentMethod","nonce","paymentData","amount","cartPrice","paymentMethodNonce","globalAction","resData","transaction","status","userData","options","authorization","onInstance","Place","readOnly","cartItem","component","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4d8a77b3.chunk.js","sourcesContent":["export const initialState = {\r\n    brands: [],\r\n    data: [],\r\n    userInfo: \"\",\r\n    accessToken: \"\"\r\n}\r\n\r\nconst brandReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_BRAND\":\r\n            return Object.assign({}, state, { brands: action.payload })\r\n        case \"EX_PRODUCT\":\r\n            return Object.assign({}, state, { data: action.payload });\r\n        case \"DEL_ITEM\":\r\n            return { data: [] };\r\n        case \"DEL_PAR_ITEM\":\r\n            return {\r\n                data: [...state.data.filter((item) => item !== action.payload)],\r\n            };\r\n        case \"LOGIN_WITH_JWT\":\r\n            return Object.assign({}, state, {\r\n                userInfo: action.payload.userInfo,\r\n                accessToken: action.payload.accessToken,\r\n            });\r\n        case \"LOGOUT\":\r\n            return initialState;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default brandReducer","import { combineReducers } from 'redux'\r\nimport brandReducer from '../reducers/brandReducer'\r\n\r\nexport default combineReducers({\r\n    brandReducer: brandReducer\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/header.css'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <div className=\"content-container\">\r\n            <div className=\"header__content\">\r\n                <Link className=\"header__title\" to=\"/\">\r\n                    <h1>Automobile</h1>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nexport default Header","import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory()","import axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: process.env.API_URL || \"http://localhost:8000/api/\",\r\n});\r\n\r\nexport default axiosInstance;","import axios from '../config/axiosConfig'\r\nimport { history } from '../history'\r\n\r\nexport const getBrand = () => async (dispatch) => {\r\n    const response = await axios.get('/brand')\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n\r\nexport const getSearch = (search) => async (dispatch) => {\r\n    const response = await axios.get(`/search/${search}`)\r\n    if (response) {\r\n        dispatch({ type: \"GET_BRAND\", payload: response.data })\r\n    }\r\n    return response\r\n}\r\n\r\nexport const getLocationBrand = (lng, lat) => async (dispatch) => {\r\n    const response = await axios.get(`/location?lng=${lng}&lat=${lat}`)\r\n    return response\r\n}\r\n\r\nexport const getPackage = (id) => async (dispatch) => {\r\n    const response = await axios.get(`/package/${id}`)\r\n    return response\r\n}\r\n\r\nexport const getProduct = () => async (dispatch) => {\r\n    const response = await axios.get('/product')\r\n    return response\r\n}\r\n\r\n//update Increment Products\r\nexport const getIncProduct = (id, data) => async (dispatch) => {\r\n    const res = await axios.put(`/edit/inc/product/${id}`, data);\r\n\r\n    return res;\r\n};\r\n\r\n//Update Decrement Products\r\nexport const getDecProduct = (id, data) => async (dispatch) => {\r\n    const res = await axios.put(`/edit/dec/product/${id}`, data);\r\n\r\n    return res;\r\n};\r\n\r\n//Save the Product as well as ExtraItem\r\nexport const saveData = (data) => async (dispatch) => {\r\n    dispatch({ type: \"EX_PRODUCT\", payload: data });\r\n    return data;\r\n};\r\n\r\n//Remove all the product item from basket\r\nexport const removeItem = () => async (dispatch) => {\r\n    return dispatch({ type: \"DEL_ITEM\" });\r\n};\r\n\r\n//Remove the particular product item from basket\r\nexport const removeParticularItem = (data) => async (dispatch) => {\r\n    return dispatch({ type: \"DEL_PAR_ITEM\", payload: data });\r\n};\r\n\r\n//Create Add User\r\nexport const RegUsers = (data) => async (dispatch) => {\r\n    let obj = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        password: data.password,\r\n        pinCode: data.pinCode,\r\n        address: data.address,\r\n        mobile: data.mobile,\r\n    };\r\n    const res = await axios.post(\"create/users\", obj);\r\n    return res;\r\n};\r\n\r\n//Get User By ID\r\nexport const getUserId = (id) => async (dispatch) => {\r\n    const res = await axios.get(`/get/users/${id}`);\r\n    return res;\r\n};\r\n\r\n//Update Add User\r\nexport const UpdateUsers = (id, data) => async (dispatch) => {\r\n    let obj = {\r\n        userId: data._id,\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        pinCode: data.pinCode,\r\n        address: data.address,\r\n        mobile: data.mobile,\r\n    };\r\n\r\n    const res = await axios.put(`/edit/users/${id}`, obj);\r\n    return res;\r\n};\r\n\r\n/*For Login*/\r\nexport const loginWithJWT = (user) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .post(\"/signin\", {\r\n                email: user.email,\r\n                password: user.password,\r\n            })\r\n            .then((response) => {\r\n                let userInfo = response.data.user;\r\n\r\n                if (userInfo) {\r\n                    dispatch({\r\n                        type: \"LOGIN_WITH_JWT\",\r\n                        payload: {\r\n                            userInfo,\r\n                            accessToken: response.data.token,\r\n                        },\r\n                    });\r\n                    setTimeout(() => {\r\n                        history.push(\"/place\");\r\n                    }, 2000);\r\n                } else {\r\n                    console.log(\"user email does not exist\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n};\r\n\r\n//Logout Action\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: \"LOGOUT\" });\r\n        history.push(\"/\");\r\n    };\r\n};\r\n\r\n/*Login With Google*/\r\n\r\n//Create Add User\r\nexport const logInGoogle = (data) => {\r\n    let obj = {\r\n        tokenId: data.tokenId,\r\n    };\r\n    return (dispatch) => {\r\n        axios\r\n            .post(\"/googlelogin\", obj)\r\n            .then((response) => {\r\n                let userInfo = response.data.user;\r\n\r\n                if (userInfo) {\r\n                    dispatch({\r\n                        type: \"LOGIN_WITH_JWT\",\r\n                        payload: {\r\n                            userInfo,\r\n                            accessToken: response.data.token,\r\n                        },\r\n                    });\r\n                    setTimeout(() => {\r\n                        history.push(\"/place\");\r\n                    }, 2000);\r\n                } else {\r\n                    console.log(\"User email does not exist\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n};\r\n\r\n/*Login With Google*/\r\n\r\n//Create Add User\r\nexport const logInFacebook = (data) => {\r\n    let obj = {\r\n        userID: data.userID,\r\n        accessToken: data.accessToken,\r\n    };\r\n\r\n    return (dispatch) => {\r\n        axios\r\n            .post(\"/facebooklogin\", obj)\r\n            .then((response) => {\r\n                let userInfo = response.data.user;\r\n\r\n                if (userInfo) {\r\n                    dispatch({\r\n                        type: \"LOGIN_WITH_JWT\",\r\n                        payload: {\r\n                            userInfo,\r\n                            accessToken: response.data.token,\r\n                        },\r\n                    });\r\n                    setTimeout(() => {\r\n                        history.push(\"/place\");\r\n                    }, 2000);\r\n                } else {\r\n                    console.log(\"User email does not exist\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n};\r\n\r\n//Get the clientToken\r\nexport const getToken = (id) => async (dispatch) => {\r\n    const res = await axios.get(`/payment/gettoken/${id}`);\r\n\r\n    return res;\r\n};\r\n\r\n//Process payment\r\nexport const processPayment = (id, data) => async (dispatch) => {\r\n    let obj = {\r\n        amount: data.amount,\r\n        paymentMethodNonce: data.paymentMethodNonce,\r\n    };\r\n    const res = await axios.post(`/payment/braintree/${id}`, obj);\r\n\r\n    return res;\r\n};\r\n","require('dotenv').config()\r\n\r\nconst axiosInstance = {\r\n    baseURL: process.env.REACT_APP_PUBLIC_PATH || \"http://localhost:8000/upload/\"\r\n}\r\n\r\nexport default axiosInstance","import React from 'react'\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    CardTitle,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n} from 'reactstrap'\r\nimport { connect } from 'react-redux'\r\nimport { history } from '../../history'\r\nimport * as globalActions from '../../actions/brandGlobal'\r\nimport IMG from '../../config/imageConfig'\r\nimport { MapPin } from 'react-feather'\r\n\r\nclass BrandList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            rowData: [],\r\n            searchData: []\r\n        }\r\n    }\r\n\r\n    //Get Location\r\n    getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                this.getCoordinates,\r\n                this.handleLocation\r\n            );\r\n        } else {\r\n            alert(\"hello\");\r\n        }\r\n    };\r\n\r\n    //Handle Location\r\n    handleLocation = (error) => {\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n                alert(\"The Request For Geolocation is denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n                alert(\"Showroom Location is not available.\");\r\n                break;\r\n            case error.TIMEOUT:\r\n                alert(\"user location was timed out.\");\r\n                break;\r\n            case error.UNKNOWN_ERROR:\r\n                alert(\"Unknown error access\");\r\n                break;\r\n            default:\r\n        }\r\n    };\r\n\r\n    //Get Coordinates of latitude and longitude\r\n    getCoordinates = (position) => {\r\n        const abc = position.coords.latitude\r\n        const xyz = position.coords.longitude\r\n        this.props.dispatch(globalActions.getLocationBrand(abc, xyz)).then((res) => {\r\n            let data = res.data\r\n            this.setState({ data })\r\n        })\r\n    };\r\n\r\n    //Get Search Brand\r\n    onSearchChange = (abc) => {\r\n        this.props.dispatch(globalActions.getSearch(abc)).then((response) => {\r\n            let rowData = response.data.data.brandData;\r\n            this.setState({ rowData });\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(globalActions.getBrand()).then((res) => {\r\n            let rowData = res.data.data.brand;\r\n            this.setState({ rowData });\r\n        });\r\n        this.getLocation()\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card className=\"pt-1\">\r\n                        <CardBody>\r\n                            <Col sm=\"12\">\r\n                                <Col\r\n                                    sm=\"12\"\r\n                                    md={{ size: 4, offset: 4 }}\r\n                                    style={{ paddingTop: 20 }}\r\n                                >\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            id=\"brand\"\r\n                                            placeholder=\"Search showroom\"\r\n                                            onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                        />\r\n                                        <p>{this.state.searchLocation}</p>\r\n                                        <InputGroupAddon addonType=\"append\">\r\n                                            <InputGroupText>\r\n                                                Search\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Row className=\"pt-4\">\r\n                                    {this.state.rowData && this.state.rowData.length > 0\r\n                                        ? this.state.rowData.map((item, index) => {\r\n                                            return (\r\n                                                <Col lg=\"4\" sm=\"12\" key={index}>\r\n                                                    <Card\r\n                                                        body\r\n                                                        outline\r\n                                                        style={{ borderColor: \"#333\" }}\r\n                                                        className=\"mt-4\"\r\n                                                        onClick={() => history.push({\r\n                                                            pathname: \"/package\",\r\n                                                            state: { brandId: item ? item._id : \"\" }\r\n                                                        })}\r\n                                                    >\r\n                                                        <CardHeader className=\"justify-content-between\">\r\n                                                            <div className=\"card-heading\">\r\n                                                                <CardTitle>\r\n                                                                    <h6>\r\n                                                                        <strong>\r\n                                                                            {item.brandName}\r\n                                                                        </strong>\r\n                                                                    </h6>\r\n                                                                </CardTitle>\r\n                                                                <CardText>\r\n                                                                    <CardLink\r\n                                                                        href={item.locationLink}\r\n                                                                    >\r\n                                                                        <MapPin size=\"15\" />{\" \"}\r\n                                                                            &nbsp; Find Location\r\n                                                                        </CardLink>\r\n                                                                </CardText>\r\n                                                            </div>\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <CardImg\r\n                                                                variant=\"bottom\"\r\n                                                                src={\r\n                                                                    IMG.baseURL +\r\n                                                                    \"\" +\r\n                                                                    item.branchLogo\r\n                                                                }\r\n                                                            />\r\n                                                            <hr />\r\n                                                            <div className=\"justify-content-between\">\r\n                                                                <i>Branch Name:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-success\">\r\n                                                                    {item.branchName}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Location:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-secondary\">\r\n                                                                    {item.location}\r\n                                                                </span>\r\n                                                                <br />\r\n                                                                <br />\r\n                                                                <i>Contact:&nbsp;&nbsp;</i>\r\n                                                                <span className=\"text-info\">\r\n                                                                    {item.contact}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            );\r\n                                        }) :\r\n                                        \"No showroom near found you!\"}\r\n                                </Row>\r\n                            </Col>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(BrandList)","import React from \"react\";\r\nimport {\r\n    Card,\r\n    Col,\r\n    Row,\r\n    Button,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Table,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ExtraItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {},\r\n            extraPrice: 0,\r\n            total: 0,\r\n            name: \"\",\r\n            addItem: this.props.addItem,\r\n        };\r\n    }\r\n\r\n    //Handle Item Data\r\n    handleItem = (abc) => {\r\n        this.setState({ extraPrice: abc.price }, () => {\r\n            const total = +this.state.addItem.price + +this.state.extraPrice;\r\n\r\n            this.setState({ total });\r\n        });\r\n        let name = abc.itemName;\r\n        this.setState({ name });\r\n    };\r\n\r\n    handleClick = () => {\r\n        let price = this.state.total\r\n            ? this.state.total\r\n            : this.state.addItem.price;\r\n        let name = this.state.addItem.productName + \" Extra Item: \" + this.state.name;\r\n        let quantity = this.state.addItem.quantity;\r\n        let id = this.state.addItem._id;\r\n        this.props.handleChild(price, name, quantity, id);\r\n    }\r\n\r\n    render() {\r\n        const { addItem } = this.state;\r\n        const { addExtraItem } = this.props;\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Card>\r\n                        <CardHeader>Product Details</CardHeader>\r\n                        <CardBody className=\"pt-2\">\r\n                            <Col sm=\"12\">\r\n                                <Table size=\"md\" responsive bordered>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Product Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Quantity</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{addItem.productName}</td>\r\n                                            <td>\r\n                                                {addItem.price}&nbsp; INR\r\n                                            </td>\r\n                                            <td>{addItem.quantity}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n\r\n                                    <thead className=\"pt-4\">\r\n                                        <tr>\r\n                                            <th>Item Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Choose One</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {addExtraItem &&\r\n                                        addExtraItem.map((item, index) => {\r\n                                            return (\r\n                                                <tbody key={index}>\r\n                                                    <tr>\r\n                                                        <td>{item.itemName}</td>\r\n                                                        <td>\r\n                                                            {item.price}&nbsp; INR\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Input\r\n                                                                className=\"ml-3\"\r\n                                                                type=\"radio\"\r\n                                                                name=\"radio\"\r\n                                                                onChange={() =>\r\n                                                                    this.handleItem(item)\r\n                                                                }\r\n                                                            />\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            );\r\n                                        })}\r\n                                </Table>\r\n                            </Col>\r\n                        </CardBody>\r\n                        <div className=\"invoice-total-table\">\r\n                            <Row>\r\n                                <Col sm=\"12\">\r\n                                    <Table responsive borderless>\r\n                                        <tbody>\r\n                                            <th className=\"text-right\">Total</th>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"d-flex justify-content-between\">\r\n                                                        <Button\r\n                                                            className=\"mr-1\"\r\n                                                            color=\"primary\"\r\n                                                            type=\"submit\"\r\n                                                            onClick={() => this.handleClick()}\r\n                                                        >\r\n                                                            Add To Cart\r\n                                                        </Button>\r\n                                                        {this.state.total\r\n                                                            ? this.state.total\r\n                                                            : this.state.addItem.price}\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExtraItem);\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n} from \"reactstrap\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { Facebook } from \"react-feather\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { history } from \"../history\";\r\nimport {\r\n    loginWithJWT,\r\n    logInGoogle,\r\n    logInFacebook,\r\n} from \"../actions/brandGlobal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PlaceLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {},\r\n            userInfo: this.props.userInfo,\r\n        };\r\n    }\r\n\r\n    //handleInput\r\n    handleInput = (event) => {\r\n        event.persist();\r\n        this.setState((prevState) => ({\r\n            formData: {\r\n                ...prevState.formData,\r\n                [event.target.name]: event.target.value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    //Handle Form Submit\r\n    handleFormSubmit = () => {\r\n        this.props.dispatch(loginWithJWT(this.state.formData));\r\n    };\r\n\r\n    toggle = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab,\r\n            });\r\n        }\r\n    };\r\n\r\n    //Response from Google\r\n    responseSuccessGoogle = (abc) => {\r\n        const tokenId = abc.tokenId;\r\n        let obj = {\r\n            tokenId: tokenId,\r\n        };\r\n        this.props.dispatch(logInGoogle(obj));\r\n    };\r\n\r\n    //Response From Facebook\r\n    responseFacebook = (response) => {\r\n        const userID = response.userID;\r\n        const accessToken = response.accessToken;\r\n        let obj = {\r\n            userID: userID,\r\n            accessToken: accessToken,\r\n        };\r\n        this.props.dispatch(logInFacebook(obj));\r\n    };\r\n\r\n    render() {\r\n        const { userInfo } = this.state;\r\n\r\n        return (\r\n            <Row className=\"m-0 justify-content-center\">\r\n                <Col\r\n                    sm=\"8\"\r\n                    xl=\"7\"\r\n                    lg=\"10\"\r\n                    md=\"8\"\r\n                    className=\"d-flex justify-content-center pt-4\"\r\n                >\r\n                    {userInfo && userInfo ? (\r\n                        <FormGroup>\r\n                            <div>\r\n                                You Already Logged Please{\" \"}\r\n                                <NavLink to=\"/place\" exact>\r\n                                    Click Here\r\n                                </NavLink>\r\n                            </div>\r\n                        </FormGroup>\r\n                    ) : (\r\n                            <Card className=\"rounded-0 mb-0 px-2\">\r\n                                <CardHeader>Login</CardHeader>\r\n                                <CardBody>\r\n                                    <Col sm=\"12\">\r\n                                        <Form\r\n                                            onSubmit={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.handleFormSubmit();\r\n                                            }}\r\n                                        >\r\n                                            <Row>\r\n                                                <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Email</Label>\r\n                                                        <Input\r\n                                                            type=\"email\"\r\n                                                            placeholder=\"Email\"\r\n                                                            name=\"email\"\r\n                                                            onChange={this.handleInput}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Password</Label>\r\n                                                        <Input\r\n                                                            type=\"password\"\r\n                                                            placeholder=\"Password\"\r\n                                                            name=\"password\"\r\n                                                            onChange={this.handleInput}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col sm=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <GoogleLogin\r\n                                                            className=\"text-white bg-primary\"\r\n                                                            clientId=\"306922324712-u704i32658h1un3q1hotdn35i3dppo6h.apps.googleusercontent.com\"\r\n                                                            buttonText=\"Login with Google\"\r\n                                                            onSuccess={this.responseSuccessGoogle}\r\n                                                            cookiePolicy={\"single_host_origin\"}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n                                                <Col sm=\"12\">\r\n                                                    <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <FacebookLogin\r\n                                                            className=\"text-white bg-primary\"\r\n                                                            appId=\"3298788330231497\"\r\n                                                            size=\"small\"\r\n                                                            callback={this.responseFacebook}\r\n                                                        />\r\n                                                    </FormGroup>\r\n\r\n                                                    <div className=\"d-flex justify-content-between\">\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            outline\r\n                                                            onClick={() => {\r\n                                                                history.push(\"/register\");\r\n                                                            }}\r\n                                                        >\r\n                                                            Register\r\n                                                        </Button>\r\n                                                        <Button color=\"primary\" type=\"submit\">\r\n                                                            Login\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </CardBody>\r\n                            </Card>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userInfo: state.brandReducer.userInfo,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(PlaceLogin);","import React from \"react\";\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    CardTitle,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from \"reactstrap\";\r\nimport { Minus, Plus, Trash } from \"react-feather\";\r\nimport PlaceLogin from '../components/PlaceLogin'\r\nimport * as globalActions from '../actions/brandGlobal'\r\n\r\nclass CartItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cart: this.props.addItem1,\r\n            prevPrice: 0,\r\n            price: 0,\r\n            total: 0,\r\n            updateData: [],\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    //Handle the Increment Quantity\r\n    handleInc = (i, index) => {\r\n        let obj = {\r\n            productId: i._id,\r\n            quantity: i.quantity,\r\n            price: i.price,\r\n        };\r\n        this.props\r\n            .dispatch(globalActions.getIncProduct(i._id, obj))\r\n            .then((res) => {\r\n                let data1 = res.data.updateProduct;\r\n                this.state.cart.map((item, index) => {\r\n                    if (item._id === data1._id) {\r\n                        this.state.cart.splice(index, 1, data1);\r\n                        let cart = this.state.cart;\r\n                        let total = cart.reduce(\r\n                            (totalitem, item) => +totalitem + +item.price,\r\n                            0\r\n                        );\r\n                        this.setState({ total });\r\n                        this.setState({ cart });\r\n                    }\r\n                });\r\n            });\r\n    };\r\n\r\n    //Handle the Decrement Quantity\r\n    handleDec = (item) => {\r\n        this.setState(\r\n            (prevState) => {\r\n                return {\r\n                    price: item.price,\r\n                    prevPrice: prevState.price,\r\n                };\r\n            },\r\n            () => {\r\n                let obj = {\r\n                    productId: item._id,\r\n                    quantity: item.quantity,\r\n                    price: this.state.price,\r\n                };\r\n                this.props\r\n                    .dispatch(globalActions.getDecProduct(item._id, obj))\r\n                    .then((res) => {\r\n                        let data1 = res.data.updateProduct;\r\n                        data1.price = this.state.prevPrice;\r\n\r\n                        this.state.cart.map((item, index) => {\r\n                            if (item._id === data1._id) {\r\n                                this.state.cart.splice(index, 1, data1);\r\n                                let cart = this.state.cart;\r\n                                let total = cart.reduce(\r\n                                    (totalitem, item) => +totalitem + + item.price,\r\n                                    0\r\n                                );\r\n                                this.setState({ total });\r\n                                this.setState({ cart });\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n        );\r\n    };\r\n\r\n    //Remove the particular Item\r\n    handleDel = (item) => {\r\n        this.props.dispatch(globalActions.removeParticularItem(item));\r\n        window.location.reload();\r\n    };\r\n\r\n    //Remove the all the item\r\n    handleRemove = (e) => {\r\n        e.preventDefault();\r\n        this.props.removeItem();\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState((prevState) => ({\r\n            showModal: !prevState.showModal,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let price = this.state.cart;\r\n        let total1 = price && price.reduce((totalitem, item) => +totalitem + +item.price, 0);\r\n        return (\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle tag=\"h5\">Order Summary</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Remove Item</th>\r\n                                <th>Product Name</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                                <th>Add</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {this.state.cart.length > 0\r\n                            ? this.state.cart &&\r\n                            this.state.cart.map((i, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"d-flex justify-content-start\">\r\n                                                    <Button\r\n                                                        className=\"mr-1\"\r\n                                                        color=\"primary\"\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => this.handleDel(i)}\r\n                                                    >\r\n                                                        <Trash size={15} />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{i.productName}</td>\r\n                                            <td> {i.price} &nbsp; INR</td>\r\n                                            <td> {i.quantity}</td>\r\n                                            <td>\r\n                                                <div className=\"d-flex justify-content-between\">\r\n                                                    <Button\r\n                                                        className=\"mr-1\"\r\n                                                        color=\"primary\"\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => this.handleDec(i)}\r\n                                                    >\r\n                                                        <Minus size={15} />\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className=\"mr-1\"\r\n                                                        color=\"primary\"\r\n                                                        type=\"submit\"\r\n                                                        onClick={() =>\r\n                                                            this.handleInc(i, index)\r\n                                                        }\r\n                                                    >\r\n                                                        <Plus size={15} />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                );\r\n                            })\r\n                            : \"No Products Found\"}\r\n                    </Table>\r\n                </CardBody>\r\n                <div className=\"invoice-total-table\">\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <Table responsive borderless>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className=\"text-right\">Total</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            {this.state.total ? this.state.total : total1}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button\r\n                                                    className=\"mr-1\"\r\n                                                    color=\"primary\"\r\n                                                    type=\"submit\"\r\n                                                    onClick={(e) => this.handleRemove(e)}\r\n                                                >\r\n                                                    Remove All\r\n                                                </Button>\r\n                                                {this.state.cart.length > 0 ? (\r\n                                                    <Button\r\n                                                        className=\"mr-1\"\r\n                                                        color=\"primary\"\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => this.toggleModal()}\r\n                                                    >\r\n                                                        Place Order\r\n                                                    </Button>\r\n                                                ) : (\r\n                                                        \"No Place the order\"\r\n                                                    )}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.showModal}\r\n                    toggle={this.toggleModal}\r\n                    className=\"modal-dialog-centered modal-lg\"\r\n                >\r\n                    <ModalHeader toggle={this.toggleModal} className=\"bg-primary\">\r\n                        Welcome back, please login to your account\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <PlaceLogin />\r\n                    </ModalBody>\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartItem;","import React, { Component, Fragment } from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport {\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    NavbarText,\r\n} from \"reactstrap\";\r\nimport { logout } from \"../actions/brandGlobal\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Menu1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: this.props.userInfo,\r\n        };\r\n    }\r\n\r\n    //Handle Item\r\n    handleitem = (e, path) => {\r\n        this.props.logout();\r\n        window.location.reload();\r\n        this.props.history.push(path);\r\n    };\r\n\r\n    render() {\r\n        const { userInfo } = this.state;\r\n        return (\r\n            <div>\r\n                <ul className=\"nav nav-tabs bg-blue\">\r\n                    {userInfo.name ? (\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle\r\n                                tag=\"a\"\r\n                                data-toggle=\"dropdown\"\r\n                                className=\"nav-link dropdown-user-link\"\r\n                            >\r\n                                <div className=\"user-nav d-sm-flex d-none\">\r\n                                    <span>\r\n                                        Welcome,\r\n                                        <strong style={{ color: \"black\" }}>\r\n                                            <i>\r\n                                                {userInfo && userInfo.name\r\n                                                    ? userInfo.name\r\n                                                    : \"loading...\"}\r\n                                            </i>\r\n                                        </strong>\r\n                                    </span>\r\n                                </div>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                {/* <NavLink\r\n                                    to=\"/\"\r\n                                    exact\r\n                                    className=\"nav-link\"\r\n                                    activeStyle={{ color: \"red\" }}\r\n                                >\r\n                                    <span className=\"align-middle\">Edit Profile</span>\r\n                                </NavLink> */}\r\n                                <DropdownItem\r\n                                    // tag={RRNavLink}\r\n                                    // to={`/login`}\r\n                                    onClick={(e) => this.handleitem(e, \"/\")}\r\n                                >\r\n                                    <span className=\"align-bottom\">logout</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    ) : (\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle\r\n                                    tag=\"a\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    className=\"nav-link dropdown-user-link\"\r\n                                >\r\n                                    <div className=\"user-nav d-sm-flex d-none\">\r\n                                        <span>\r\n                                            First Name :{\" \"}\r\n                                            <strong style={{ color: \"black\" }}>\r\n                                                <i>\r\n                                                    {userInfo && userInfo.firstName\r\n                                                        ? userInfo.firstName\r\n                                                        : \"loading...\"}\r\n                                                </i>\r\n                                            </strong>\r\n                                        </span>\r\n                                        &nbsp;\r\n                                        <span>\r\n                                            Last Name :{\" \"}\r\n                                            <strong style={{ color: \"black\" }}>\r\n                                                {userInfo && userInfo.lastName\r\n                                                    ? userInfo.lastName\r\n                                                    : \"loading...\"}\r\n                                            </strong>\r\n                                        </span>\r\n                                    </div>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    {/* <NavLink\r\n                                        to=\"/\"\r\n                                        exact\r\n                                        className=\"nav-link\"\r\n                                        activeStyle={{ color: \"red\" }}\r\n                                    >\r\n                                        <span className=\"align-middle\">Edit Profile</span>\r\n                                    </NavLink> */}\r\n                                    <DropdownItem\r\n                                        // tag={RRNavLink}\r\n                                        // to={`/login`}\r\n                                        onClick={(e) => this.handleitem(e, \"/\")}\r\n                                    >\r\n                                        <span className=\"align-bottom\">logout</span>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userInfo: state.brandReducer.userInfo,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return { logout: () => dispatch(logout()), dispatch };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu1));","import React from \"react\"\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    CardText,\r\n    Input,\r\n    CardLink,\r\n    CardImg,\r\n    Media,\r\n    Collapse,\r\n    CardTitle,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\nimport { connect } from 'react-redux'\r\nimport * as IMG from \"../../config/imageConfig\";\r\nimport * as globalActions from '../../actions/brandGlobal'\r\nimport ExtraItem from '../ExtraItem'\r\nimport Cart from '../CartItem'\r\nimport Menu1 from '../../navbar/menu'\r\n\r\nclass PackageList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brandId:\r\n                this.props.location &&\r\n                    this.props.location.state &&\r\n                    this.props.location.state.brandId\r\n                    ? this.props.location.state.brandId // you will get the edit Id here\r\n                    : \"\",\r\n            rowData: [],\r\n            showModal: false,\r\n            comboItem: [],\r\n            item: [],\r\n            arr: this.props.data1\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(globalActions.getPackage(this.state.brandId)).then((res) => {\r\n            const rowData = res.data.data.package\r\n            this.setState({ rowData })\r\n        })\r\n    }\r\n\r\n    //Open toogle model for product\r\n    toggleModal = (item) => {\r\n        this.state.rowData &&\r\n            this.state.rowData.map((item) =>\r\n                this.setState({ item: item.extraItemDetails })\r\n            );\r\n        this.setState({ comboItem: item });\r\n        this.setState((prevState) => ({\r\n            showModal: !prevState.showModal,\r\n        }));\r\n    };\r\n\r\n    //Handle Remove Item\r\n    handleRemove = () => {\r\n        this.props.dispatch(globalActions.removeItem)\r\n        window.location.reload()\r\n    }\r\n\r\n    handleChild = (price, name, quantity, id) => {\r\n        let cart = {\r\n            price: price,\r\n            productName: name,\r\n            quantity: quantity,\r\n            _id: id,\r\n        };\r\n\r\n        let arr = this.state.arr;\r\n\r\n        arr.push({ ...cart, count: 1 });\r\n        this.props.dispatch(globalActions.saveData(arr))\r\n        this.setState({ arr });\r\n        this.toggleModal();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <Menu1 />\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                    {this.state.rowData &&\r\n                        this.state.rowData.map((i, index) => {\r\n                            return (\r\n                                <Card\r\n                                    style={{\r\n                                        cursor: \"pointer\"\r\n                                    }}\r\n                                    key={index}\r\n                                >\r\n                                    <CardTitle tag=\"h3\">{i.packageName}</CardTitle>\r\n                                    <CardHeader>\r\n                                        {i.productDetails &&\r\n                                            i.productDetails.map((item, index) => {\r\n                                                return (\r\n                                                    <div key={index}>\r\n                                                        <CardTitle\r\n                                                            tag=\"h6\"\r\n                                                            onClick={() => this.toggleModal(item)}\r\n                                                        >\r\n                                                            Product Name: {item.productName}\r\n                                                        </CardTitle>\r\n                                                        <Modal\r\n                                                            isOpen={this.state.showModal}\r\n                                                            toggle={this.toggleModal}\r\n                                                            className=\"modal-dialog-centered modal-lg\"\r\n                                                        >\r\n                                                            <ModalHeader\r\n                                                                toggle={this.toggleModal}\r\n                                                                className=\"bg-secondary\"\r\n                                                            >\r\n                                                                Choose Items\r\n                                                            </ModalHeader>\r\n                                                            <ModalBody>\r\n                                                                <ExtraItem\r\n                                                                    toggleModal={this.toggleModal}\r\n                                                                    addItem={this.state.comboItem}\r\n                                                                    addExtraItem={this.state.item}\r\n                                                                    handleChild={this.handleChild}\r\n                                                                />\r\n                                                            </ModalBody>\r\n                                                        </Modal>\r\n                                                    </div>\r\n\r\n                                                );\r\n                                            })}\r\n                                        <Media className=\"d-sm-flex d-block\">\r\n                                            <Media body className=\"pt-3\">\r\n                                                <p>\r\n                                                    <h6>Description:</h6>\r\n                                                    <i>{i.description}</i>\r\n                                                </p>\r\n                                            </Media>\r\n                                            <Media className=\"mt-md-1 mt-0\">\r\n                                                <Media\r\n                                                    className=\"rounded mr-2\"\r\n                                                    object\r\n                                                    src={IMG.default.baseURL + \"\" + i.image}\r\n                                                    alt=\"Generic placeholder image\"\r\n                                                    height=\"112\"\r\n                                                    width=\"112\"\r\n                                                />\r\n                                            </Media>\r\n                                        </Media>\r\n                                    </CardHeader>\r\n                                </Card>\r\n                            );\r\n                        })}\r\n                </Col>\r\n\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <Cart addItem1={this.state.arr} dispatch={this.props.dispatch} removeItem={this.handleRemove} />\r\n                </Col>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data1: state.brandReducer.data\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PackageList)\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    CardHeader,\r\n    CardBody,\r\n    Card,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    CustomInput,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport * as registerActions from \"../actions/brandGlobal\";\r\nimport { history } from \"../history\";\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: this.props.roles,\r\n            erroMsg: false,\r\n            formData: {},\r\n        };\r\n    }\r\n\r\n    //handleInput\r\n    handleInput = (event) => {\r\n        event.persist();\r\n        this.setState((prevState) => ({\r\n            formData: {\r\n                ...prevState.formData,\r\n                [event.target.name]: event.target.value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    //Handle Form Submit\r\n    handleFormSubmit = () => {\r\n        this.props.dispatch(registerActions.RegUsers(this.state.formData)).then((res) => {\r\n            if (!res.data) {\r\n                <h3>Register Not Successfully</h3>\r\n            } else {\r\n                <h3>Register Successfully</h3>\r\n                setTimeout(() => {\r\n                    history.push(\"/\");\r\n                }, 3000);\r\n            }\r\n        }).catch((error) => {\r\n            <h3>Register Not Successfully</h3>\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row\r\n                style={{\r\n                    height: \"100vh\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: 1500,\r\n                }}\r\n            >\r\n                <Col md={6} lg={4}>\r\n                    <Card\r\n                        body\r\n                        style={{\r\n                            backgroundColor: \"#c1c1c1\",\r\n                        }}\r\n                    >\r\n                        <Form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                this.handleFormSubmit();\r\n                            }}\r\n                        >\r\n                            {/* <div className=\"text-center pb-4\">\r\n                                <img\r\n                                    className=\"rounded\"\r\n                                    style={{ width: 60, height: 60, cursor: \"pointer\" }}\r\n                                    alt=\"logo\"\r\n                                />\r\n                            </div> */}\r\n                            <Row>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>First Name</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            required\r\n                                            placeholder=\"First Name\"\r\n                                            name=\"firstName\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Last Name</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            required\r\n                                            placeholder=\"Last Name\"\r\n                                            name=\"lastName\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Email</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"email\"\r\n                                            required\r\n                                            placeholder=\"Email\"\r\n                                            name=\"email\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Password</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"password\"\r\n                                            required\r\n                                            placeholder=\"Password\"\r\n                                            name=\"password\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Pin-Code</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            required\r\n                                            placeholder=\"Pin-Code\"\r\n                                            name=\"pinCode\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Mobile No.</Label>\r\n                                        <strong className=\"text-danger\">*</strong>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            required\r\n                                            placeholder=\"Mobile No.\"\r\n                                            name=\"mobile\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n\r\n                                <Col sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                        <Label>Address</Label>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            placeholder=\"Address\"\r\n                                            name=\"address\"\r\n                                            onChange={this.handleInput}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Button className=\"bg-dark border-0\" block type=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        //Once data are store in dispatch variable so whenever use it variable to call like this in below:\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Register);","import React from \"react\";\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    CardTitle,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n} from \"reactstrap\";\r\nimport { Minus, Plus, Trash } from \"react-feather\";\r\nimport PlaceLogin from \"../components/PlaceLogin\";\r\nimport * as globalActions from \"../actions/brandGlobal\";\r\n\r\nclass PlaceCart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cartData: this.props.cartData,\r\n            prevPrice: 0,\r\n            price: 0,\r\n            total: 0,\r\n            total1: 0,\r\n            updateData: [],\r\n            showLeadModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let price = this.state.cartData;\r\n        let total1 =\r\n            price &&\r\n            price.reduce((totalitem, item) => +totalitem + +item.price, 0);\r\n        this.setState({ total1 });\r\n        this.props.cartTotal(total1);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"mb-4\">\r\n                <CardHeader>\r\n                    <CardTitle tag=\"h5\">Orders Details</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Product Name</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {this.state.cartData.length > 0\r\n                            ? this.state.cartData &&\r\n                            this.state.cartData.map((i, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr>\r\n                                            <td>{i.productName}</td>\r\n                                            <td>{i.price}&nbsp; INR</td>\r\n                                            <td>{i.quantity}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                );\r\n                            })\r\n                            : \"No Products Found\"}\r\n                    </Table>\r\n                </CardBody>\r\n                <div className=\"invoice-total-table\">\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <Table responsive borderless>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className=\"text-right\">Total</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            {this.state.total1}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaceCart;","import React from \"react\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\nimport * as globalAction from '../actions/brandGlobal'\r\nimport { Button, Row, Col, Card, CardBody, CardHeader } from \"reactstrap\";\r\n\r\nclass Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientToken: null,\r\n            instance: {},\r\n            userInfo: this.props.userData,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const userId = this.state.userInfo._id;\r\n        this.props.dispatch(globalAction.getToken(userId)).then((res) => {\r\n            let clientToken = res.data.clientToken;\r\n            this.setState({ clientToken });\r\n        });\r\n    };\r\n\r\n    //Purchase Product\r\n    onPurchase = () => {\r\n        const userId = this.state.userInfo._id;\r\n        this.state.instance.requestPaymentMethod().then((data) => {\r\n            const nonce = data.nonce;\r\n            const paymentData = {\r\n                amount: this.props.cartPrice,\r\n                paymentMethodNonce: nonce,\r\n            };\r\n            this.props\r\n                .dispatch(globalAction.processPayment(userId, paymentData))\r\n                .then((res) => {\r\n                    const resData = res.data;\r\n                    let obj = {\r\n                        transaction: resData.transaction.id,\r\n                        status: resData.transaction.status,\r\n                        amount: resData.transaction.amount,\r\n                    };\r\n                    this.props.data(obj);\r\n                });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col sm={{ size: 11, offset: 0 }}>\r\n                    <Card>\r\n                        <CardHeader>Payment</CardHeader>\r\n                        <CardBody>\r\n                            {this.state.clientToken !== null ? (\r\n                                <div>\r\n                                    <DropIn\r\n                                        options={{\r\n                                            authorization: this.state.clientToken,\r\n                                        }}\r\n                                        onInstance={(instance) =>\r\n                                            (this.state.instance = instance)\r\n                                        }\r\n                                    />\r\n                                    <Button\r\n                                        className=\"btn btn-block btn-primary\"\r\n                                        onClick={() => this.onPurchase()}\r\n                                    >\r\n                                        Buy\r\n                           </Button>\r\n                                </div>\r\n                            ) : (\r\n                                    \"loading..\"\r\n                                )}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Payment;","import React from \"react\";\r\nimport {\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    Table,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    CardTitle,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PlaceCart from \"../components/PlaceCart\"\r\nimport Payment from \"../components/Payment\"\r\n\r\nclass Place extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: this.props.userInfo,\r\n            cartPrice: 0,\r\n            paymentData: {},\r\n        };\r\n    }\r\n\r\n    cartTotal = (price) => {\r\n        this.setState({ cartPrice: price });\r\n    };\r\n\r\n    paymentData = (data) => {\r\n        this.setState({ paymentData: data });\r\n    };\r\n\r\n    render() {\r\n        const { userInfo, paymentData } = this.state;\r\n\r\n        return (\r\n            <Row>\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <CardTitle tag=\"h2\">User Information</CardTitle>\r\n                                <div className=\"d-flex flex-wrap flot-right\">\r\n                                    <Button\r\n                                        className=\"add-new-btn\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => this.props.history.push(\"/\")}\r\n                                        outline\r\n                                    >\r\n                                        <span className=\"align-middle\">Back To Menu</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            {userInfo.name ? (\r\n                                <Row>\r\n                                    <Col sm=\"12\">\r\n                                        <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                            <Label>Name</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                readOnly\r\n                                                value={\r\n                                                    userInfo && userInfo.name\r\n                                                        ? userInfo.name\r\n                                                        : \"loading...\"\r\n                                                }\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col sm=\"12\">\r\n                                        <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                            <Label>E-mail</Label>\r\n                                            <Input\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                readOnly\r\n                                                value={\r\n                                                    userInfo && userInfo.email\r\n                                                        ? userInfo.email\r\n                                                        : \"loading...\"\r\n                                                }\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : (\r\n                                    <Row>\r\n                                        <Col md=\"6\" sm=\"12\">\r\n                                            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                                <Label>First Name</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"firstName\"\r\n                                                    readOnly\r\n                                                    value={\r\n                                                        userInfo && userInfo.firstName\r\n                                                            ? userInfo.firstName\r\n                                                            : \"loading...\"\r\n                                                    }\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md=\"6\" sm=\"12\">\r\n                                            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                                <Label>Last Name</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"lastName\"\r\n                                                    readOnly\r\n                                                    value={\r\n                                                        userInfo && userInfo.lastName\r\n                                                            ? userInfo.lastName\r\n                                                            : \"loading...\"\r\n                                                    }\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md=\"6\" sm=\"12\">\r\n                                            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                                <Label>E-mail</Label>\r\n                                                <Input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    readOnly\r\n                                                    value={\r\n                                                        userInfo && userInfo.email\r\n                                                            ? userInfo.email\r\n                                                            : \"loading...\"\r\n                                                    }\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col md=\"6\" sm=\"12\">\r\n                                            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                                <Label>PinCode</Label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    name=\"pinCode\"\r\n                                                    readOnly\r\n                                                    value={\r\n                                                        userInfo && userInfo.pinCode\r\n                                                            ? userInfo.pinCode\r\n                                                            : \"loading...\"\r\n                                                    }\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col sm=\"12\">\r\n                                            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                                <Label>Address</Label>\r\n                                                <Input\r\n                                                    type=\"textarea\"\r\n                                                    name=\"address\"\r\n                                                    readOnly\r\n                                                    value={\r\n                                                        userInfo && userInfo.address\r\n                                                            ? userInfo.address\r\n                                                            : \"loading...\"\r\n                                                    }\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <PlaceCart\r\n                        cartData={this.props.cartItem}\r\n                        cartTotal={this.cartTotal}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <Payment\r\n                        dispatch={this.props.dispatch}\r\n                        userData={userInfo}\r\n                        data={this.paymentData}\r\n                        cartPrice={this.state.cartPrice}\r\n                    />\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Transaction Id</th>\r\n                                <th>Amount</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{paymentData.transaction}</td>\r\n\r\n                                <td>{paymentData.amount}&nbsp; INR</td>\r\n\r\n                                <td>{paymentData.status}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n//Once data are store in dispatch variable so whenever use it variable to call like this in below:\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cartItem: state.brandReducer.data,\r\n        userInfo: state.brandReducer.userInfo,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Place);","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport Header from '../components/Header'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport BrandList from './brands/BrandList'\r\nimport PackageList from './package/PackageList'\r\nimport Register from './Register'\r\nimport Place from './Place'\r\nimport { history } from '../history'\r\nimport { connect } from 'react-redux'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router history={history}>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={BrandList} />\r\n                    <Route path=\"/package\" exact component={PackageList} />\r\n                    <Route path=\"/register\" exact component={Register} />\r\n                    <Route path=\"/place\" exact component={Place} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userInfo: state.brandReducer.userInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\nimport App from './components/App'\r\n\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}